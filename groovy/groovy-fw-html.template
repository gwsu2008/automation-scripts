<%
def lastSuccesfulBuild = build.previousNotFailedBuild
def failed = build.result != hudson.model.Result.SUCCESS

def currResult = build.result
def prevResult = build.previousBuild?.result ?: null

def consecutiveSuccess = currResult == hudson.model.Result.SUCCESS && prevResult == hudson.model.Result.SUCCESS

def builds = []
def changes = []
def count = 0

if(consecutiveSuccess){
   builds << build
   def changeItems = build.changeSet.items
   count += changeItems.length
   changes += changeItems as List
}else{
    if ( lastSuccesfulBuild.nextBuild != null ) {
       lastSuccesfulBuild = lastSuccesfulBuild.nextBuild
    }
    while(lastSuccesfulBuild){
	builds << lastSuccesfulBuild
	def changeItems = lastSuccesfulBuild.changeSet.items
	count += changeItems.length
	changes += changeItems as List
    	lastSuccesfulBuild = lastSuccesfulBuild.nextBuild
    }
}
%>

<style type="text/css">
/*base css*/
a{color:#4a72af}
body{background-color:#e4e4e4}
body,p{margin:0;padding:0}
img{display:block}
h1,h2,h3,h4,h5,h6{margin:0 0 .8em 0}
h3{font-size:28px;color:#444!important;font-family:Arial,Helvetica,sans-serif}
h4{font-size:22px;color:#4a72af!important;font-family:Arial,Helvetica,sans-serif}
h5{font-size:18px;color:#444!important;font-family:Arial,Helvetica,sans-serif}
p{font-size:12px;color:#444!important;font-family:"Lucida Grande","Lucida Sans","Lucida Sans Unicode",sans-serif;line-height:1.5}
ol li img{display:inline;height:20px}
/*div styles*/
.news{text-align:center;padding-top:15px;}
.content{width:1024px;margin:0 auto;background-color:white}
.round_border{margin-bottom:5px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;margin-top:0;font-size:14px;padding:6px;border:1px solid #ccc}
.status{background-color:<%= 
            build.result.toString() == "SUCCESS" ? 'green' : 'red' %>;font-size:28px;font-weight:bold;color:white;width:1024px;height:52px;margin-bottom:18px;text-align:center;vertical-align:middle;border-collapse:collapse;background-repeat:no-repeat}
.status .info{color:white!important;text-shadow:0 -1px 0 rgba(0,0,0,0.3);font-size:32px;line-height:36px;padding:8px 0}
.main img{width:38px;margin-right:16px;height:38px}
.main table{font-size:14px;}
.main table th{text-align:left;}
.bottom-message{width:1024px;cellpadding:5px;cellspacing:0px}
.bottom-message .message{font-size:13px;color:#aaa;line-height:18px;text-align:center}
.bottom-message .designed{font-size:13px;color:#aaa;line-height:18px;font-style: italic;text-align:right}
.failed {color: red;}
img.cartoon {width: 36px; display:inline}
</style>
<body>
<div class="content round_border">
		<div class="status">
			<p class="info"><%= build.result.toString()%></p>
		</div>
		<!-- status -->
		<div class="main round_border">
			<table>
				<tbody>
					<tr>
						<th>Project:</th>
						<td>${project.name}</td>
					</tr>
					<tr>
						<th>Build ${build.displayName}:</th>
						<td><a
							href="${rooturl}${build.url}">${rooturl}${build.url}</a></td>
					</tr>
					<tr>
						<th>Date of build:</th>
						<td>${it.timestampString}</td>
					</tr>
					<tr>
						<th>Build duration:</th>
						<td>${build.durationString}</td>
					</tr>
					<tr>
						<th>Changes</th>
						<td><a
							href="${rooturl}${build.url}changes">${rooturl}${build.url}changes</a></td>
					</tr>
					<tr>
						<td colspan="2">&nbsp;</td>
					</tr>
				</tbody>

			</table>
			
		</div>
		<!-- main -->
        <% def artifacts = build.artifacts
            if(artifacts != null && artifacts.size() > 0) { %>
        
		<div class="artifacts round_border">
			<b>Build Artifacts:</b>
			<ul>
            <% 		artifacts.each() { f -> %>		
                <li><a href="${rooturl}${build.url}artifact/${f}">${f}</a></li>
            <%		} %>                
			</ul>
		</div>
        <% } %>
        <!-- artifacts -->

	<!-- JUnit TEMPLATE -->

	<% def junitResultList = it.JUnitTestResult
	try {
		 def cucumberTestResultAction = it.getAction("org.jenkinsci.plugins.cucumber.jsontestsupport.CucumberTestResultAction")
		 junitResultList.add(cucumberTestResultAction.getResult())
	} catch(e) {
        	//cucumberTestResultAction not exist in this build
	}
	if (junitResultList.size() > 0) { %>
 	<% junitResultList.each{
  		junitResult ->  %>
	  <div class="main round_border">
	      <b>Test Results:</b><p>
	     <% junitResult.getChildren().each { packageResult -> %>
	        Name: ${packageResult.getName()} Failed: ${packageResult.getFailCount()} test(s), Passed: ${packageResult.getPassCount()} test(s), Skipped: ${packageResult.getSkipCount()} test(s), Total: ${packageResult.getPassCount()+packageResult.getFailCount()+packageResult.getSkipCount()} test(s)<br>
	        <% packageResult.getFailedTests().each{ failed_test -> %>
	         <span class="failed"><B><li>Failed: ${failed_test.getFullName()}</li></B><br></span>
        <% }
      	} %>
	</div>
	<%
	 }
	} %>

        <% if(changes != null) {
            def hadChanges = false
            def counter = 0 %>
            
		<div class="main round_border">
			<b>Changes in detail:</b>
			<ol>
            <% 	changes.each() { item ->
                    hadChanges = true
                    %>

				<li>${item.msgAnnotated} (${item.author})</li>
            <%      counter ++
                }  

             if(!hadChanges) { %>
                    No Changes
            <%	}    %>
			</ol>
		</div>
        <% } %>
		<!-- details -->

        <% if(build.result==hudson.model.Result.SUCCESS) { %>
                <div class="main round_border">
                <b>S3 REPOSITORY URL:</b><p>
        <%      def rdr= new InputStreamReader(build.getLogInputStream())
        rdr.eachLine{ it -> 
      if(it.contains("URL: https://repository.proteus.io/")) {
          def artifact_line = hudson.console.ConsoleNote.removeNotes(it)
          line = artifact_line.split(" ")[2] %>
          <a href="${line}">${line}</a><br>
       <% } } }  %>
      
	<% if(build.result==hudson.model.Result.FAILURE) { %>
		<div class="main round_border">
                <b>CONSOLE OUTPUT:</b><p>
	<%      build.getLog(100).each() { line -> %> ${line}<br>
	<%      }
   	} %>
    </div>
</body>

